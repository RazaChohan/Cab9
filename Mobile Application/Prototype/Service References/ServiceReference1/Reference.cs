//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Prototype.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(Prototype.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        Prototype.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CalculateRoadDistance", ReplyAction="http://tempuri.org/IService/CalculateRoadDistanceResponse")]
        System.IAsyncResult BeginCalculateRoadDistance(string Origin, string Destination, System.AsyncCallback callback, object asyncState);
        
        double EndCalculateRoadDistance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/CabBooking", ReplyAction="http://tempuri.org/IService/CabBookingResponse")]
        System.IAsyncResult BeginCabBooking(string BookingStatus, System.DateTime BookingDateTime, string BookingOrigin, string BookingDestination, string BookingCabType, System.AsyncCallback callback, object asyncState);
        
        string EndCabBooking(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/AuthenticateCustomer", ReplyAction="http://tempuri.org/IService/AuthenticateCustomerResponse")]
        System.IAsyncResult BeginAuthenticateCustomer(string username, string password, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/AuthenticateDriver", ReplyAction="http://tempuri.org/IService/AuthenticateDriverResponse")]
        System.IAsyncResult BeginAuthenticateDriver(string username, string password, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateDriver(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Prototype.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Prototype.ServiceReference1.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Prototype.ServiceReference1.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateRoadDistanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CalculateRoadDistanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CabBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CabBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Prototype.ServiceReference1.IService>, Prototype.ServiceReference1.IService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculateRoadDistanceDelegate;
        
        private EndOperationDelegate onEndCalculateRoadDistanceDelegate;
        
        private System.Threading.SendOrPostCallback onCalculateRoadDistanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCabBookingDelegate;
        
        private EndOperationDelegate onEndCabBookingDelegate;
        
        private System.Threading.SendOrPostCallback onCabBookingCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateCustomerDelegate;
        
        private EndOperationDelegate onEndAuthenticateCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateDriverDelegate;
        
        private EndOperationDelegate onEndAuthenticateDriverDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateDriverCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<CalculateRoadDistanceCompletedEventArgs> CalculateRoadDistanceCompleted;
        
        public event System.EventHandler<CabBookingCompletedEventArgs> CabBookingCompleted;
        
        public event System.EventHandler<AuthenticateCustomerCompletedEventArgs> AuthenticateCustomerCompleted;
        
        public event System.EventHandler<AuthenticateDriverCompletedEventArgs> AuthenticateDriverCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Prototype.ServiceReference1.IService.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((Prototype.ServiceReference1.IService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginGetDataUsingDataContract(Prototype.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Prototype.ServiceReference1.CompositeType Prototype.ServiceReference1.IService.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Prototype.ServiceReference1.CompositeType composite = ((Prototype.ServiceReference1.CompositeType)(inValues[0]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            Prototype.ServiceReference1.CompositeType retVal = ((Prototype.ServiceReference1.IService)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(Prototype.ServiceReference1.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(Prototype.ServiceReference1.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginCalculateRoadDistance(string Origin, string Destination, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculateRoadDistance(Origin, Destination, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double Prototype.ServiceReference1.IService.EndCalculateRoadDistance(System.IAsyncResult result) {
            return base.Channel.EndCalculateRoadDistance(result);
        }
        
        private System.IAsyncResult OnBeginCalculateRoadDistance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Origin = ((string)(inValues[0]));
            string Destination = ((string)(inValues[1]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginCalculateRoadDistance(Origin, Destination, callback, asyncState);
        }
        
        private object[] OnEndCalculateRoadDistance(System.IAsyncResult result) {
            double retVal = ((Prototype.ServiceReference1.IService)(this)).EndCalculateRoadDistance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCalculateRoadDistanceCompleted(object state) {
            if ((this.CalculateRoadDistanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculateRoadDistanceCompleted(this, new CalculateRoadDistanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculateRoadDistanceAsync(string Origin, string Destination) {
            this.CalculateRoadDistanceAsync(Origin, Destination, null);
        }
        
        public void CalculateRoadDistanceAsync(string Origin, string Destination, object userState) {
            if ((this.onBeginCalculateRoadDistanceDelegate == null)) {
                this.onBeginCalculateRoadDistanceDelegate = new BeginOperationDelegate(this.OnBeginCalculateRoadDistance);
            }
            if ((this.onEndCalculateRoadDistanceDelegate == null)) {
                this.onEndCalculateRoadDistanceDelegate = new EndOperationDelegate(this.OnEndCalculateRoadDistance);
            }
            if ((this.onCalculateRoadDistanceCompletedDelegate == null)) {
                this.onCalculateRoadDistanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculateRoadDistanceCompleted);
            }
            base.InvokeAsync(this.onBeginCalculateRoadDistanceDelegate, new object[] {
                        Origin,
                        Destination}, this.onEndCalculateRoadDistanceDelegate, this.onCalculateRoadDistanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginCabBooking(string BookingStatus, System.DateTime BookingDateTime, string BookingOrigin, string BookingDestination, string BookingCabType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCabBooking(BookingStatus, BookingDateTime, BookingOrigin, BookingDestination, BookingCabType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Prototype.ServiceReference1.IService.EndCabBooking(System.IAsyncResult result) {
            return base.Channel.EndCabBooking(result);
        }
        
        private System.IAsyncResult OnBeginCabBooking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BookingStatus = ((string)(inValues[0]));
            System.DateTime BookingDateTime = ((System.DateTime)(inValues[1]));
            string BookingOrigin = ((string)(inValues[2]));
            string BookingDestination = ((string)(inValues[3]));
            string BookingCabType = ((string)(inValues[4]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginCabBooking(BookingStatus, BookingDateTime, BookingOrigin, BookingDestination, BookingCabType, callback, asyncState);
        }
        
        private object[] OnEndCabBooking(System.IAsyncResult result) {
            string retVal = ((Prototype.ServiceReference1.IService)(this)).EndCabBooking(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCabBookingCompleted(object state) {
            if ((this.CabBookingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CabBookingCompleted(this, new CabBookingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CabBookingAsync(string BookingStatus, System.DateTime BookingDateTime, string BookingOrigin, string BookingDestination, string BookingCabType) {
            this.CabBookingAsync(BookingStatus, BookingDateTime, BookingOrigin, BookingDestination, BookingCabType, null);
        }
        
        public void CabBookingAsync(string BookingStatus, System.DateTime BookingDateTime, string BookingOrigin, string BookingDestination, string BookingCabType, object userState) {
            if ((this.onBeginCabBookingDelegate == null)) {
                this.onBeginCabBookingDelegate = new BeginOperationDelegate(this.OnBeginCabBooking);
            }
            if ((this.onEndCabBookingDelegate == null)) {
                this.onEndCabBookingDelegate = new EndOperationDelegate(this.OnEndCabBooking);
            }
            if ((this.onCabBookingCompletedDelegate == null)) {
                this.onCabBookingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCabBookingCompleted);
            }
            base.InvokeAsync(this.onBeginCabBookingDelegate, new object[] {
                        BookingStatus,
                        BookingDateTime,
                        BookingOrigin,
                        BookingDestination,
                        BookingCabType}, this.onEndCabBookingDelegate, this.onCabBookingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginAuthenticateCustomer(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateCustomer(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Prototype.ServiceReference1.IService.EndAuthenticateCustomer(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateCustomer(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginAuthenticateCustomer(username, password, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateCustomer(System.IAsyncResult result) {
            string retVal = ((Prototype.ServiceReference1.IService)(this)).EndAuthenticateCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateCustomerCompleted(object state) {
            if ((this.AuthenticateCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateCustomerCompleted(this, new AuthenticateCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateCustomerAsync(string username, string password) {
            this.AuthenticateCustomerAsync(username, password, null);
        }
        
        public void AuthenticateCustomerAsync(string username, string password, object userState) {
            if ((this.onBeginAuthenticateCustomerDelegate == null)) {
                this.onBeginAuthenticateCustomerDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateCustomer);
            }
            if ((this.onEndAuthenticateCustomerDelegate == null)) {
                this.onEndAuthenticateCustomerDelegate = new EndOperationDelegate(this.OnEndAuthenticateCustomer);
            }
            if ((this.onAuthenticateCustomerCompletedDelegate == null)) {
                this.onAuthenticateCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateCustomerDelegate, new object[] {
                        username,
                        password}, this.onEndAuthenticateCustomerDelegate, this.onAuthenticateCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Prototype.ServiceReference1.IService.BeginAuthenticateDriver(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateDriver(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Prototype.ServiceReference1.IService.EndAuthenticateDriver(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateDriver(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateDriver(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Prototype.ServiceReference1.IService)(this)).BeginAuthenticateDriver(username, password, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateDriver(System.IAsyncResult result) {
            string retVal = ((Prototype.ServiceReference1.IService)(this)).EndAuthenticateDriver(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateDriverCompleted(object state) {
            if ((this.AuthenticateDriverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateDriverCompleted(this, new AuthenticateDriverCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateDriverAsync(string username, string password) {
            this.AuthenticateDriverAsync(username, password, null);
        }
        
        public void AuthenticateDriverAsync(string username, string password, object userState) {
            if ((this.onBeginAuthenticateDriverDelegate == null)) {
                this.onBeginAuthenticateDriverDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateDriver);
            }
            if ((this.onEndAuthenticateDriverDelegate == null)) {
                this.onEndAuthenticateDriverDelegate = new EndOperationDelegate(this.OnEndAuthenticateDriver);
            }
            if ((this.onAuthenticateDriverCompletedDelegate == null)) {
                this.onAuthenticateDriverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateDriverCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateDriverDelegate, new object[] {
                        username,
                        password}, this.onEndAuthenticateDriverDelegate, this.onAuthenticateDriverCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Prototype.ServiceReference1.IService CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<Prototype.ServiceReference1.IService>, Prototype.ServiceReference1.IService {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<Prototype.ServiceReference1.IService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(Prototype.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public Prototype.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                Prototype.ServiceReference1.CompositeType _result = ((Prototype.ServiceReference1.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCalculateRoadDistance(string Origin, string Destination, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Origin;
                _args[1] = Destination;
                System.IAsyncResult _result = base.BeginInvoke("CalculateRoadDistance", _args, callback, asyncState);
                return _result;
            }
            
            public double EndCalculateRoadDistance(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("CalculateRoadDistance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCabBooking(string BookingStatus, System.DateTime BookingDateTime, string BookingOrigin, string BookingDestination, string BookingCabType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = BookingStatus;
                _args[1] = BookingDateTime;
                _args[2] = BookingOrigin;
                _args[3] = BookingDestination;
                _args[4] = BookingCabType;
                System.IAsyncResult _result = base.BeginInvoke("CabBooking", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCabBooking(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CabBooking", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthenticateCustomer(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("AuthenticateCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAuthenticateCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AuthenticateCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthenticateDriver(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("AuthenticateDriver", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAuthenticateDriver(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AuthenticateDriver", _args, result)));
                return _result;
            }
        }
    }
}
